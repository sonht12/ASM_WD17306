{
  "version": 3,
  "sources": ["browser-external:os", "../../dotenv/package.json", "../../dotenv/lib/main.js"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"os\" has been externalized for browser compatibility. Cannot access \"os.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "{\r\n  \"name\": \"dotenv\",\r\n  \"version\": \"16.0.3\",\r\n  \"description\": \"Loads environment variables from .env file\",\r\n  \"main\": \"lib/main.js\",\r\n  \"types\": \"lib/main.d.ts\",\r\n  \"exports\": {\r\n    \".\": {\r\n      \"require\": \"./lib/main.js\",\r\n      \"types\": \"./lib/main.d.ts\",\r\n      \"default\": \"./lib/main.js\"\r\n    },\r\n    \"./config\": \"./config.js\",\r\n    \"./config.js\": \"./config.js\",\r\n    \"./lib/env-options\": \"./lib/env-options.js\",\r\n    \"./lib/env-options.js\": \"./lib/env-options.js\",\r\n    \"./lib/cli-options\": \"./lib/cli-options.js\",\r\n    \"./lib/cli-options.js\": \"./lib/cli-options.js\",\r\n    \"./package.json\": \"./package.json\"\r\n  },\r\n  \"scripts\": {\r\n    \"dts-check\": \"tsc --project tests/types/tsconfig.json\",\r\n    \"lint\": \"standard\",\r\n    \"lint-readme\": \"standard-markdown\",\r\n    \"pretest\": \"npm run lint && npm run dts-check\",\r\n    \"test\": \"tap tests/*.js --100 -Rspec\",\r\n    \"prerelease\": \"npm test\",\r\n    \"release\": \"standard-version\"\r\n  },\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"git://github.com/motdotla/dotenv.git\"\r\n  },\r\n  \"keywords\": [\r\n    \"dotenv\",\r\n    \"env\",\r\n    \".env\",\r\n    \"environment\",\r\n    \"variables\",\r\n    \"config\",\r\n    \"settings\"\r\n  ],\r\n  \"readmeFilename\": \"README.md\",\r\n  \"license\": \"BSD-2-Clause\",\r\n  \"devDependencies\": {\r\n    \"@types/node\": \"^17.0.9\",\r\n    \"decache\": \"^4.6.1\",\r\n    \"dtslint\": \"^3.7.0\",\r\n    \"sinon\": \"^12.0.1\",\r\n    \"standard\": \"^16.0.4\",\r\n    \"standard-markdown\": \"^7.1.0\",\r\n    \"standard-version\": \"^9.3.2\",\r\n    \"tap\": \"^15.1.6\",\r\n    \"tar\": \"^6.1.11\",\r\n    \"typescript\": \"^4.5.4\"\r\n  },\r\n  \"engines\": {\r\n    \"node\": \">=12\"\r\n  }\r\n}\r\n", "const fs = require('fs')\r\nconst path = require('path')\r\nconst os = require('os')\r\nconst packageJson = require('../package.json')\r\n\r\nconst version = packageJson.version\r\n\r\nconst LINE = /(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/mg\r\n\r\n// Parser src into an Object\r\nfunction parse (src) {\r\n  const obj = {}\r\n\r\n  // Convert buffer to string\r\n  let lines = src.toString()\r\n\r\n  // Convert line breaks to same format\r\n  lines = lines.replace(/\\r\\n?/mg, '\\n')\r\n\r\n  let match\r\n  while ((match = LINE.exec(lines)) != null) {\r\n    const key = match[1]\r\n\r\n    // Default undefined or null to empty string\r\n    let value = (match[2] || '')\r\n\r\n    // Remove whitespace\r\n    value = value.trim()\r\n\r\n    // Check if double quoted\r\n    const maybeQuote = value[0]\r\n\r\n    // Remove surrounding quotes\r\n    value = value.replace(/^(['\"`])([\\s\\S]*)\\1$/mg, '$2')\r\n\r\n    // Expand newlines if double quoted\r\n    if (maybeQuote === '\"') {\r\n      value = value.replace(/\\\\n/g, '\\n')\r\n      value = value.replace(/\\\\r/g, '\\r')\r\n    }\r\n\r\n    // Add to object\r\n    obj[key] = value\r\n  }\r\n\r\n  return obj\r\n}\r\n\r\nfunction _log (message) {\r\n  console.log(`[dotenv@${version}][DEBUG] ${message}`)\r\n}\r\n\r\nfunction _resolveHome (envPath) {\r\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\r\n}\r\n\r\n// Populates process.env from .env file\r\nfunction config (options) {\r\n  let dotenvPath = path.resolve(process.cwd(), '.env')\r\n  let encoding = 'utf8'\r\n  const debug = Boolean(options && options.debug)\r\n  const override = Boolean(options && options.override)\r\n\r\n  if (options) {\r\n    if (options.path != null) {\r\n      dotenvPath = _resolveHome(options.path)\r\n    }\r\n    if (options.encoding != null) {\r\n      encoding = options.encoding\r\n    }\r\n  }\r\n\r\n  try {\r\n    // Specifying an encoding returns a string instead of a buffer\r\n    const parsed = DotenvModule.parse(fs.readFileSync(dotenvPath, { encoding }))\r\n\r\n    Object.keys(parsed).forEach(function (key) {\r\n      if (!Object.prototype.hasOwnProperty.call(process.env, key)) {\r\n        process.env[key] = parsed[key]\r\n      } else {\r\n        if (override === true) {\r\n          process.env[key] = parsed[key]\r\n        }\r\n\r\n        if (debug) {\r\n          if (override === true) {\r\n            _log(`\"${key}\" is already defined in \\`process.env\\` and WAS overwritten`)\r\n          } else {\r\n            _log(`\"${key}\" is already defined in \\`process.env\\` and was NOT overwritten`)\r\n          }\r\n        }\r\n      }\r\n    })\r\n\r\n    return { parsed }\r\n  } catch (e) {\r\n    if (debug) {\r\n      _log(`Failed to load ${dotenvPath} ${e.message}`)\r\n    }\r\n\r\n    return { error: e }\r\n  }\r\n}\r\n\r\nconst DotenvModule = {\r\n  config,\r\n  parse\r\n}\r\n\r\nmodule.exports.config = DotenvModule.config\r\nmodule.exports.parse = DotenvModule.parse\r\nmodule.exports = DotenvModule\r\n"],
  "mappings": "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",
  "names": []
}
